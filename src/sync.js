const ReBikeParser = require('./parser');

async function runSync() {
  const parser = new ReBikeParser();
  
  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤...');
    const result = await parser.syncWithWebsite();
    
    console.log('\nüéâ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log(`‚úÖ –ê–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤: ${result.found.length}`);
    console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö: ${result.deleted.length}`);
    
    if (result.deleted.length > 0) {
      console.log('\nüìã –£–¥–∞–ª–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:');
      result.deleted.slice(0, 5).forEach(product => {
        console.log(`  - ${product.title}`);
      });
      if (result.deleted.length > 5) {
        console.log(`  ... –∏ –µ—â–µ ${result.deleted.length - 5} —Ç–æ–≤–∞—Ä–æ–≤`);
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error);
    process.exit(1);
  }
  
  process.exit(0);
}

runSync();